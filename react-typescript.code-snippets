{
  "React Redux Slice": {
    "scope": "typescript",
    "prefix": "rslice",
    "body": [
      "import { createSlice } from \"@reduxjs/toolkit\";",
      "",
      "export interface I${1/(.)/${1:/capitalize}/}State {",
      "}",
      "",
      "const initialState: I${1/(.)/${1:/capitalize}/}State = {",
      "};",
      "",
      "export const ${1}Slice = createSlice({",
      "  name: \"${1/(.)/${1:/downcase}/}\",",
      "  initialState,",
      "  reducers: {",
      "  },",
      "});",
      "",
      "export const {",
      "} = ${1}Slice.actions;"
    ],
    "description": "Creates a React Redux Slice"
  },
  "React State": {
    "scope": "typescriptreact",
    "prefix": "rstate",
    "body": [
      "const [${1}, set${1/(.)/${1:/capitalize}/}] = useState<${3:type}>(${4:defaultValue});"
    ],
    "description": "Creates a useState line."
  },
  "React Redux Dispatcher": {
    "scope": "typescriptreact",
    "prefix": "rdisp",
    "body": [
      "const dispatch = useApp$0Dispatch();"
    ],
    "description": "Creates a useAppDispatch."
  },
  "React Redux Selector": {
    "scope": "typescriptreact",
    "prefix": "rselector",
    "body": [
      "const value = useApp$0Selector(store => store);"
    ],
    "description": "Creates a useAppDispatch."
  },
  "React Functional Component Without Props": {
    "scope": "typescriptreact",
    "prefix": "rfc",
    "body": [
      "import React from \"react\";",
      "",
      "const ${1:CompName}: React.FC = () => {",
      "\treturn (",
      "\t\t<>",
      "\t\t\t$0",
      "\t\t</>",
      "\t);",
      "};",
      "",
      "export default ${1:CompName};"
    ],
    "description": "Creates a React.FC without a props interface interface with an explicit return"
  },
  "React Functional Component With Props": {
    "scope": "typescriptreact",
    "prefix": "rfcp",
    "body": [
      "import React from \"react\";",
      "",
      "interface I${1:CompName}Props {",
      "}",
      "",
      "const ${1:CompName}: React.FC<I${1:CompName}Props> = ({",
      "\t}: I${1:CompName}Props) => {",
      "\treturn (",
      "\t\t<>",
      "\t\t\t$0",
      "\t\t</>",
      "\t);",
      "};",
      "",
      "export default ${1:CompName};"
    ],
    "description": "Creates a React.FC<T> with an explicit return"
  },
  "Implicit Return React Functional Component Without Props": {
    "scope": "typescriptreact",
    "prefix": "irfc",
    "body": [
      "import React from \"react\";",
      "",
      "const ${1:CompName}: React.FC = () =>",
      "\t<>",
      "\t\t$0",
      "\t</>;",
      "",
      "export default ${1:CompName};"
    ],
    "description": "Creates a React.FC without a props interface interface with an implicit return"
  },
  "Implicit Return React Functional Component With Props": {
    "scope": "typescriptreact",
    "prefix": "irfcp",
    "body": [
      "import React from \"react\";",
      "",
      "interface I${1:CompName}Props {",
      "}",
      "",
      "const ${1:CompName}: React.FC<I${1:CompName}Props> = ({",
      "\t}: I${1:CompName}Props) =>",
      "\t<>",
      "\t\t$0",
      "\t</>;",
      "",
      "export default ${1:CompName};"
    ],
    "description": "Creates a React.FC<T> with an implicit return"
  },
  "Default Export Interface": {
    "scope": "typescript,typescriptreact",
    "prefix": "dfinterface",
    "body": [
      "export default interface ${1:InterfaceName} {",
      "\t$0",
      "}"
    ],
    "description": "Creates an interface as the default export"
  },
  "Exported Interface": {
    "scope": "typescript,typescriptreact",
    "prefix": "exinterface",
    "body": [
      "export interface ${1:InterfaceName} {",
      "\t$0",
      "}"
    ],
    "description": "Creates an exported interface"
  }
}
